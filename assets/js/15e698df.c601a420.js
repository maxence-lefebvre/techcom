"use strict";(self.webpackChunktechintelligence=self.webpackChunktechintelligence||[]).push([[890],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(r),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return r?n.createElement(f,a(a({ref:t},p),{},{components:r})):n.createElement(f,a({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2781:(e,t,r)=>{r.r(t),r.d(t,{frontMatter:()=>c,contentTitle:()=>l,metadata:()=>s,toc:()=>p,default:()=>d});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),a=["components"],c={sidebar_label:"0002 Use monorepo",slug:"/adr-0002-use-monorepo"},l="1. Use a monorepo",s={unversionedId:"adr/use-monorepo",id:"adr/use-monorepo",title:"1. Use a monorepo",description:"Date: 2021-12-24",source:"@site/docs/adr/0002-use-monorepo.md",sourceDirName:"adr",slug:"/adr-0002-use-monorepo",permalink:"/techcom/docs/adr-0002-use-monorepo",editUrl:"https://github.com/maxence-lefebvre/techcom/edit/main/apps/docs/docs/docs/adr/0002-use-monorepo.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"0002 Use monorepo",slug:"/adr-0002-use-monorepo"},sidebar:"someSidebar",previous:{title:"0001 Record ADR",permalink:"/techcom/docs/adr-0001-record-architecture-decisions"},next:{title:"0003 Use GitHub Actions",permalink:"/techcom/docs/adr-0003-use-github-actions"}},p=[{value:"Status",id:"status",children:[],level:2},{value:"Context",id:"context",children:[],level:2},{value:"Decision",id:"decision",children:[],level:2},{value:"Consequences",id:"consequences",children:[],level:2}],u={toc:p};function d(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"1-use-a-monorepo"},"1. Use a monorepo"),(0,i.kt)("p",null,"Date: 2021-12-24"),(0,i.kt)("h2",{id:"status"},"Status"),(0,i.kt)("p",null,"\u2714 Accepted"),(0,i.kt)("h2",{id:"context"},"Context"),(0,i.kt)("p",null,"We will need to deploy different services and some frontends.\nWe could either use a manyrepo, a metarepo or a monorepo approach, all with tradeoffs."),(0,i.kt)("h2",{id:"decision"},"Decision"),(0,i.kt)("p",null,"We will use nx workspaces as our monorepo engine."),(0,i.kt)("h2",{id:"consequences"},"Consequences"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"CI must be generic and be repo agnostic, since it doesn't know which app will be built a priori (use ",(0,i.kt)("inlineCode",{parentName:"li"},"nx affected"),")."),(0,i.kt)("li",{parentName:"ul"},'Infra as code will need to be split into multiple "projects" with explicit dependencies.'),(0,i.kt)("li",{parentName:"ul"},"Apps and libraries won't need to explicitly declare their dependencies.")))}d.isMDXComponent=!0}}]);